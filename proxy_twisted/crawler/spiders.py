#!/usr/bin/env python


"""
@PROJECT: proxy_twisted
@AUTHOR: momen
@TIME: 2/12/20 8:30 PM
"""

from abc import ABCMeta, abstractmethod
from proxy_twisted.crawler.https import Request
from lxml import etree

import logging

logger = logging.getLogger(__name__)


class Spider(metaclass=ABCMeta):
    @abstractmethod
    def start_requests(self):
        pass

    @abstractmethod
    def parse(self, response):
        pass


class IPHaiSpider(Spider):

    start_urls = ['https://www.xicidaili.com/nn/']

    def __init__(self, settings):
        logger.info('parser is starting...')
        self.setting = settings

    @classmethod
    def produce(cls, settings):
        return cls(settings)

    def start_requests(self):
        for url in self.start_urls:
            yield Request(url, headers={'user-agent': ['Mozilla/5.0']}, callback=self.parse)

    def parse(self, response):
        selector = etree.HTML(response.text)   # xml/html is formatted text generated by tree structural data, so...
        logger.debug(selector)
        nodes = selector.xpath(r'//table/tr')
        for node in nodes:
            result = node.xpath(r'td/text()|td/a/text()')
            logging.debug(result)
            if result:
                logger.debug('successfully get an item')
                yield result
